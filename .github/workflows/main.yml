name: Client archiving
on:
  push:
    tags:
      - 'v*'
  schedule:
    - cron: '0 2,14 * * 1,2,3,4,5' # 10AM, 10PM CST
  workflow_dispatch:
jobs:
  release:
    runs-on: windows-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'pnpm'
    - name: Install dependencies
      run: pnpm i
    - name: Check patch info
      id: check
      run: pnpm start-check
      env:
        PATCH_SERVER_ENDPOINT: ${{ secrets.PATCH_SERVER_ENDPOINT }}
    - name: Restore or ping cached client files
      uses: actions/cache/restore@v4
      with:
        key: client
        path: client
        lookup-only: ${{ steps.check.outputs.endpoint == null }}
    - name: Start client archiving
      id: archive
      if: ${{ steps.check.outputs.endpoint != null }}
      run: |
        pnpm start-main `
        --endpoint=${{ steps.check.outputs.endpoint }} `
        --id=${{ steps.check.outputs.id }} `
        --version=${{ steps.check.outputs.version }} `
        --mode=${{ steps.check.outputs.mode }}
      env:
        CLIENT_ARCHIVE_URL: ${{ secrets.CLIENT_ARCHIVE_URL }}
    - name: Save client files to cache
      if: ${{ steps.check.outputs.endpoint != null && steps.archive.outputs.noClientCache != 'true'}}
      uses: actions/cache/save@v4
      with:
        key: client
        path: client
    - name: Commit meta.json and create a new tag
      if: ${{ steps.check.outputs.endpoint != null }}
      uses: stefanzweifel/git-auto-commit-action@v5
      with:
        branch: main
        commit_message: 'chore: update meta.json'
        file_pattern: meta.json
        tagging_message: 'P${{ steps.check.outputs.version }}'
    - name: Expose current date
      if: ${{ steps.check.outputs.endpoint != null }}
      uses: Kaven-Universe/github-action-current-date-time@v1
      id: date
      with:
        format: 'YYYY-MM-DD'
    - name: Create Release
      if: ${{ steps.check.outputs.endpoint != null }}
      uses: ncipollo/release-action@v1
      with:
        tag: 'P${{ steps.check.outputs.version }}'
        body: 'Release date: ${{ steps.date.outputs.time }}\nInstructions: https://kinf.cc/Gz6ni'
        artifacts: 'archives/*.zip'
        makeLatest: true
